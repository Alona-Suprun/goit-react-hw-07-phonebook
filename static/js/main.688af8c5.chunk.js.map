{"version":3,"sources":["components/FilterContacts/FilterContacts.module.css","components/Section/Section.module.css","components/Button/Button.module.css","components/Section/Section.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operation.js","components/Button/Button.js","components/ContactForm/ContactForm.js","components/ContactList/Contact.js","components/ContactList/ContactList.js","components/FilterContacts/FilterContacts.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactList/Contact.module.css","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Section","title","children","className","s","getContacts","state","contacts","items","getFilter","filter","getContactsList","normalizedFilter","toLowerCase","name","includes","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","axios","defaults","baseURL","contactOperations","fetchContact","dispatch","a","get","data","addContact","item","post","deleteContact","contactsId","delete","Button","onClick","allyProps","button","defaultProps","ContactForm","useState","setName","number","setNumber","useSelector","useDispatch","inputChange","e","target","value","form","onSubmit","preventDefault","existingName","find","prevContact","alert","id","uuidv4","label","placeholder","input","type","pattern","required","onChange","Contact","onDeleteContact","ContactList","isLoading","getIsLoading","error","getError","useEffect","list","map","FilterContact","App","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.688af8c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"FilterContacts_label__3c-4x\",\"input\":\"FilterContacts_input__e-Eas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__29udH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1N_Tw\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getContactsList = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contact/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contact/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contact/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contact/addContactRequest');\r\nexport const addContactSuccess = createAction('contact/addContactSuccess');\r\nexport const addContactError = createAction('contact/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contact/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contact/deleteContactSuccess ',\r\n);\r\nexport const deleteContactError = createAction('contact/deleteContactError');\r\n\r\nexport const filterContacts = createAction('contact/filterContacts');\r\n\r\n//const contactsActions = { addContact, deleteContact, filterContacts };\r\n//export default contactsActions;\r\n","import axios from 'axios';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000/';\r\n\r\nconst fetchContact = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get('contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError());\r\n  }\r\n};\r\n\r\nconst addContact = item => async dispatch => {\r\n  dispatch(addContactRequest);\r\n  try {\r\n    const { data } = await axios.post('contacts', item);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError());\r\n  }\r\n};\r\n\r\nconst deleteContact = contactsId => async dispatch => {\r\n  deleteContactRequest();\r\n  try {\r\n    await axios.delete(`contacts/${contactsId}`);\r\n    dispatch(deleteContactSuccess(contactsId));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\nconst contactOperations = { fetchContact, addContact, deleteContact };\r\nexport default contactOperations;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Button.module.css';\r\n\r\nconst Button = ({ children, onClick, ...allyProps }) => (\r\n  <button className={s.button} onClick={onClick} {...allyProps}>\r\n    {children}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  onClick: () => null,\r\n  children: null,\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Button;\r\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n//import contactsActions from '../../redux/contacts/contacts-actions';\r\nimport { getContacts } from '../../redux/contacts/contacts-selectors';\r\nimport contactOperations from '../../redux/contacts/contacts-operation';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport s from './ContactForm.module.css';\r\nimport Button from '../Button/Button';\r\n\r\nconst ContactForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(state => getContacts(state));\r\n  const dispatch = useDispatch();\r\n\r\n  const inputChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  const formSubmit = e => {\r\n    e.preventDefault();\r\n    const existingName = contacts.find(\r\n      prevContact => prevContact.name === name,\r\n    );\r\n    if (existingName) {\r\n      alert(`${existingName.name} is already in contact list`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactOperations.addContact({ id: uuidv4(), name, number }));\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={formSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          placeholder=\"type name\"\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={inputChange}\r\n        />\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          placeholder=\"type number\"\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={inputChange}\r\n        />\r\n      </label>\r\n\r\n      <Button type=\"submit\">Add contact</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\nimport Button from '../Button/Button';\r\nconst Contact = ({ name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className={s.item}>\r\n      <span className={s.item}>{name}:</span>\r\n      <span className={s.item}>{number}</span>\r\n      <Button type=\"button\" onClick={onDeleteContact}>\r\n        Delete\r\n      </Button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n//import contactsActions from '../../redux/contacts/contacts-actions';\r\nimport contactOperations from '../../redux/contacts/contacts-operation';\r\nimport { getContactsList } from '../../redux/contacts/contacts-selectors';\r\nimport Contact from './Contact';\r\nimport s from './Contact.module.css';\r\n\r\nconst ContactList = ({ name, number }) => {\r\n  const contacts = useSelector(getContactsList);\r\n  const isLoading = useSelector(contactOperations.getIsLoading);\r\n  const error = useSelector(contactOperations.getError);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(contactOperations.deleteContact(id));\r\n  useEffect(() => dispatch(contactOperations.fetchContact()), [dispatch]);\r\n  if (contacts === []) return null;\r\n  if (isLoading) return <h2>Loading...</h2>;\r\n  if (error) return <h1>{error}</h1>;\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <Contact\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => onDeleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n//import contactsActions from '../../redux/contacts/contacts-actions';\r\nimport { filterContacts } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\n\r\nimport s from './FilterContacts.module.css';\r\n\r\nconst FilterContact = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(filterContacts(e.target.value));\r\n\r\n  return (\r\n    <>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          placeholder=\"type name\"\r\n          className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          title=\"Search contacts\"\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FilterContact;\r\n","import Section from './components/Section/Section';\nimport Form from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport FilterContact from './components/FilterContacts/FilterContacts';\n\nconst App = () => {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Section>\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        <FilterContact />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContacts,\r\n} from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, { ...payload }],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [...getDefaultMiddleware(), logger];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nimport './index.module.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contact_list__2TsHp\",\"item\":\"Contact_item__2MkrA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2lj4B\",\"label\":\"ContactForm_label__3D11o\",\"input\":\"ContactForm_input__3WEgz\"};"],"sourceRoot":""}